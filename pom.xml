<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.uberfire.provisioning</groupId>
    <artifactId>uberfire-provisioning</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>Uberfire Provisioning :: Parent</name>
    <packaging>pom</packaging>
    <modules>
        <module>uberfire-provisioning-spi</module>
        <module>uberfire-provisioning-docker-provider</module>
        <module>uberfire-provisioning-kubernetes-provider</module>
        <module>uberfire-provisioning-wildfly-provider</module>
        <module>uberfire-provisioning-services</module>
        <module>uberfire-provisioning-cluster-spi</module>
        <module>uberfire-provisioning-cluster-local</module>
        <module>wildfly-util</module>
        <module>sample-war</module>
        <module>uberfire-provisioning-pipeline-spi</module>
        <module>uberfire-provisioning-pipeline-local</module>
        <module>uberfire-provisioning-build-spi</module>
        <module>uberfire-provisioning-build-maven</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.wildfly-swarm>1.0.0.CR1-SNAPSHOT</version.wildfly-swarm>
        <version.hibernate-validator>5.1.3.Final</version.hibernate-validator>
        <version.kubernetes-api>2.2.96</version.kubernetes-api>
        <version.cdi>1.2</version.cdi>
        <version.aether>1.1.0</version.aether>
        <docker.maven.plugin.version>0.13.5</docker.maven.plugin.version>
        <maven.min.version>3.2.3</maven.min.version>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <junit.version>4.11</junit.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>bom</artifactId>
                <version>${version.wildfly-swarm}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-spi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-docker-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-kubernetes-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-wildfly-provider</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>wildfly-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-cluster-spi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-cluster-local</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-pipeline-spi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-pipeline-local</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-build-spi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.uberfire.provisioning</groupId>
                <artifactId>uberfire-provisioning-build-maven</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>kubernetes-api</artifactId>
                <version>${version.kubernetes-api}</version>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>${version.cdi}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-api</artifactId>
                <version>${version.aether}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-spi</artifactId>
                <version>${version.aether}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-util</artifactId>
                <version>${version.aether}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.aether</groupId>
                <artifactId>aether-impl</artifactId>
                <version>${version.aether}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>projectodd-snapshots</id>
            <name>Project:odd Snapshots from CI</name>
            <url>https://repository-projectodd.forge.cloudbees.com/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>projectodd-snapshots</id>
            <name>Project:odd Snapshots from CI</name>
            <url>https://repository-projectodd.forge.cloudbees.com/snapshot</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
  
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.jolokia</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>